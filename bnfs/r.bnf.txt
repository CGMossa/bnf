prog	:	END_OF_INPUT
|	'\n'
|	expr_or_assign '\n'
|	expr_or_assign ';'
|	error
;

expr_or_assign  :    expr
|    equal_assign
;

equal_assign    :    expr EQ_ASSIGN expr_or_assign
;

expr	: 	NUM_CONST
|	STR_CONST
|	NULL_CONST
|	SYMBOL
|	'{' exprlist '}'
|	'(' expr_or_assign ')'
|	'-' expr %prec UMINUS
|	'+' expr %prec UMINUS
|	'!' expr %prec UNOT
|	'~' expr %prec TILDE
|	'?' expr
|	expr ':'  expr
|	expr '+'  expr
|	expr '-' expr
|	expr '*' expr
|	expr '/' expr
|	expr '^' expr
|	expr SPECIAL expr
|	expr '%' expr
|	expr '~' expr
|	expr '?' expr
|	expr LT expr
|	expr LE expr
|	expr EQ expr
|	expr NE expr
|	expr GE expr
|	expr GT expr
|	expr AND expr
|	expr OR expr
|	expr AND2 expr
|	expr OR2 expr
|	expr LEFT_ASSIGN expr
|	expr RIGHT_ASSIGN expr
|	FUNCTION '(' formlist ')' cr expr_or_assign %prec LOW
|	expr '(' sublist ')'
|	IF ifcond expr_or_assign
|	IF ifcond expr_or_assign ELSE expr_or_assign
|	FOR forcond expr_or_assign %prec FOR
|	WHILE cond expr_or_assign
|	REPEAT expr_or_assign
|	expr LBB sublist ']' ']'
|	expr '[' sublist ']'
|	SYMBOL NS_GET SYMBOL
|	SYMBOL NS_GET STR_CONST
|	STR_CONST NS_GET SYMBOL
|	STR_CONST NS_GET STR_CONST
|	SYMBOL NS_GET_INT SYMBOL
|	SYMBOL NS_GET_INT STR_CONST
|	STR_CONST NS_GET_INT SYMBOL
|	STR_CONST NS_GET_INT STR_CONST
|	expr '$' SYMBOL
|	expr '$' STR_CONST
|	expr '@' SYMBOL
|	expr '@' STR_CONST
|	NEXT
|	BREAK
;


cond	:	'(' expr ')'
;

ifcond	:	'(' expr ')'
;

forcond :	'(' SYMBOL IN expr ')'
;


exprlist:
|	expr_or_assign
|	exprlist ';' expr_or_assign
|	exprlist ';'
|	exprlist '\n' expr_or_assign
|	exprlist '\n'
;

sublist	:	sub
|	sublist cr ',' sub
;

sub	:
|	expr
|	SYMBOL EQ_ASSIGN
|	SYMBOL EQ_ASSIGN expr
|	STR_CONST EQ_ASSIGN
|	STR_CONST EQ_ASSIGN expr
|	NULL_CONST EQ_ASSIGN
|	NULL_CONST EQ_ASSIGN expr
;

formlist:
|	SYMBOL
|	SYMBOL EQ_ASSIGN expr
|	formlist ',' SYMBOL
|	formlist ',' SYMBOL EQ_ASSIGN expr
;

